// MIT License
// 
// Copyright (c) 2018 Kazuya Ujihara
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace ChemFormatter.WordAddIn
{
    public class AutoCorrectSaver : System.IDisposable
    {
<# foreach (var prop in props) { #>
        public bool <#= prop.Name #> { get; set; }
<# } #>
        public AutoCorrectSaver()
        {
            var app = Globals.ThisAddIn.Application;
<# foreach (var prop in props) { #>
            this.<#= prop.Name #> = app.<#= prop.Container #>.<#= prop.Name #>;
<# } #>
        }

        public void DisableAll()
        {
            var app = Globals.ThisAddIn.Application;
<# foreach (var prop in props) { #>
            app.<#= prop.Container #>.<#= prop.Name #> = false;
<# } #>
        }

        public void Dispose()
        {
            var app = Globals.ThisAddIn.Application;
<# foreach (var prop in props) { #>
            app.<#= prop.Container #>.<#= prop.Name #> = this.<#= prop.Name #>;
<# } #>
        }
    }
}

<#+
    public class PropertyInfo
    {
        public string Container { get; set; }
        public string Name { get; set; }

        public PropertyInfo(string container, string name)
        {
            this.Container = container;
            this.Name = name;
        }
    }

    public PropertyInfo[] props = new PropertyInfo[]
    {
        new PropertyInfo("Options", "Overtype"),
        new PropertyInfo("AutoCorrect", "CorrectInitialCaps"),
        new PropertyInfo("AutoCorrect", "CorrectSentenceCaps"),
        new PropertyInfo("AutoCorrect", "CorrectTableCells"),
        new PropertyInfo("AutoCorrect", "CorrectDays"),
        new PropertyInfo("AutoCorrect", "CorrectCapsLock"),
        new PropertyInfo("AutoCorrect", "ReplaceText"),
        new PropertyInfo("AutoCorrect", "ReplaceTextFromSpellingChecker"),
        new PropertyInfo("AutoCorrect", "DisplayAutoCorrectOptions"),
    };
#>
